@model AspNet.Blog.Web.Common.IPagedList

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-left">
        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
            <a href="@CreateUrl(Model.NextPage)" class="page-link">
                &larr; Older
            </a>
        </li>
        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
            <a href="@CreateUrl(Model.PreviousPage)" class="page-link">
                Newest &rarr;
            </a>
        </li>
    </ul>
</nav>

@functions {
    protected string CreateUrl(int page)
    {
        var url = $"{Context.Request.Path}?";

        var routeValues = new RouteValueDictionary();
        foreach (var qs in Context.Request.HttpContext.Request.Query)
        {
            routeValues[qs.Key] = qs.Value;
        }
        routeValues["page"] = page;

        return url + String.Join('&', routeValues.Select(x => $"{x.Key}={x.Value}"));
    }
}